package ch.bbw.zork;import java.util.HashMap;import java.util.ArrayList;public class Room {	private String description;	private HashMap<String, Room> exits;	private ArrayList<Item> items;	private boolean visited;	public Room(String description) {		this.description = description;		this.exits = new HashMap<>();		this.items = new ArrayList<>();		this.visited = false;	}	public void put(Room north, Room east, Room south, Room west) {		if (north != null) {			exits.put("north", north);		}		if (east != null) {			exits.put("east", east);		}		if (south != null) {			exits.put("south", south);		}		if (west != null) {			exits.put("west", west);		}	}	public void addItem(Item item) {		items.add(item);	}	public ArrayList<Item> getItems() {		return items;	}	public String shortDescription() {		return description;	}	public String longDescription() {		String tempStr = "You are in " + description + ".\n";		tempStr += exitString();		return tempStr;	}	private String exitString() {		String returnString = "Exits:";		for (String key : exits.keySet()) {			returnString += " " + key;		}		return returnString;	}	public Room nextRoom(String direction) {		return exits.get(direction);	}	public boolean isVisited() {		return visited;	}	public void setVisited(boolean visited) {		this.visited = visited;	}}