package ch.bbw.zork;import java.io.BufferedReader;import java.io.InputStream;import java.io.InputStreamReader;import java.util.StringTokenizer;public class Parser {	private CommandWords commands;	private InputStream inputStream;	public Parser(InputStream inputStream) {		this.inputStream = inputStream;		this.commands = new CommandWords();	}	public Command get() {		String s = "";		String w1, w2;		System.out.print("> ");		BufferedReader reader = new BufferedReader(new InputStreamReader(				this.inputStream));		try {			s = reader.readLine();		} catch (java.io.IOException exc) {			System.out.println(				"There was an error during reading: " + exc.getMessage());		}		StringTokenizer tokenizer = new StringTokenizer(s);		if (tokenizer.hasMoreTokens()) {			w1 = tokenizer.nextToken();		} else {			w1 = null;		}		if (tokenizer.hasMoreTokens()) {			w2 = tokenizer.nextToken();		} else {			w2 = null;		}		if (commands.isCommand(w1)) {			return new Command(w1, w2);		} else {			return new Command(null, w2);		}	}	public String showCommands() {		return commands.showAll();	}}